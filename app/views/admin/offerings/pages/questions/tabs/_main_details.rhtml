<h2>Question Details</h2>
<dl class="inline-definitions">

	<dt>Page <%= required %></dt>
	<dd><%= f.collection_select :offering_page_id, @offering.pages, :id, :title %></dd>

	<dt>Question <%= required %></dt>
	<dd><%= f.text_area :question, :cols => 50, :rows => 3, :class => 'wide' %>
		<p class="caption">Specify the "question" here. This could be very short or quite long; there are no restrictions on length.</p></dd>

	<dt>Short title</dt>
	<dd><%= f.text_field :short_title, :width => 50 %>
		<p class="caption">EXPO will use the short title to refer to this question in the admin area, 
			and on the Application Review page for students and reviewers. Leave blank to use the 
			full question title for this purpose instead.</p></dd>

	<dt>Order</dt>
	<dd><%= f.select :ordering, (1..@page.questions.size+1).to_a %>
		<p class="caption">You can also rearrange questions when viewing the page details.</p></dd>

	<dt>Type <%= required %></dt>
	<dd><%= f.select :display_as, 
					 OfferingQuestion.display_as_options.collect{|o| [o[:title], o[:name]]}, 
					 {:include_blank => true},
					 {:onchange => "if (this.value == 'date'){$('quesiton_date').show();}else{$('quesiton_date').hide();}" }
        %> 
		<p class="caption">Determines how this question will be displayed to the student.</p>
		<div id="quesiton_date" style="display:none">Start Year: <%= f.text_field :start_year, :size => 10 %> &nbsp; End Year: <%= f.text_field :end_year, :size => 10 %>
		<p class="caption">Determines year range for year-dropdown. Number only such as 1950, 1999, etc</p></div>
	</dd>

	<dt>Data Storage <%= required %></dt>
	<dd><%= checkbox_with_label f, :dynamic_answer, "Don't link to a specific field in the database" %>
		<p class="caption">Depending on the question, you might not need to store applicants' responses in
			a predefined field in the database. This is called a "dynamic answer" and answers are simply stored
			in an extra table so that you can view the answer in the application details. To store the answer
			in a specific database field instead, leave this box unchecked and choose the database field to store
			the answer below. This can be necessary for data attributes that need to be queried or utilized outside
			simply viewing of the answer.</p>
	
		<br>
		Record to update/read:
		<%= f.select :model_to_update,
						{ 'Person' => 'person', 'Student Database' => 'person.sdb' },
						:include_blank => "Application"
					#ApplicationForOffering.reflect_on_all_associations.collect{|a| a.name if a.macro == :belongs_to} 
					%>
					
		<br>Field name: <%= f.text_field :attribute_to_update, :class => 'code' %>
		</dd>

</dl>

